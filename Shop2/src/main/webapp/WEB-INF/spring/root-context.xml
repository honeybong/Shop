<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 프로젝트 시작 시 필요한 객체를 미리 만듦 -->
	
	<bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="MyDB"></property>
		<property name="password" value="ORACLE"></property>
	</bean>
	
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
	    <constructor-arg ref="dataSourceSpied" />
	    <property name="logFormatter">
	        <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
	            <property name="loggingType" value="MULTI_LINE" />
	            <property name="sqlPrefix" value="SQL:::" />
	        </bean>
	    </property>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:sql-map-config.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
		<!-- <property name="mapperLocations" value="classpath:mapper/*-mapper.xml"></property> -->
	</bean>
	
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<context:component-scan base-package="com.spring.shop.*.service"></context:component-scan>
	
	<!-- 어노테이션으로 트렌잭션(은행관련 내가 나는 돈을 보냈는디 중간에 오류나서 저놈은 못받았다 그거방지용) 
	처리를 하기 위한 설정(얘쓸려면 아래쪽 Namespaces 에서 tx채크해야됨 -->
   <tx:annotation-driven/>
   
   <!-- 트랜젝션 매니저 -->
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource"></property>
   </bean>
	
   <!-- 파일업로드 -->
   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <!-- 용량 -->
      <property name="maxUploadSize" value="10485760" />
      <property name="defaultEncoding" value="UTF-8"/>
   </bean>
	
</beans>
